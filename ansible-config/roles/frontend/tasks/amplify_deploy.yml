- name: Verificar se o app no Amplify já existe
  ansible.builtin.command: >
      aws amplify list-apps --region {{ amplify_region }}
  register: amplify_apps_list
  # Não usamos `changed_when` porque o comando não altera nada.

- name: Criar o app no AWS Amplify se não existir
  ansible.builtin.command: >
      aws amplify create-app --name {{ amplify_app_name }} --repository {{ amplify_repository_url }} --platform WEB --region {{ amplify_region }}
  when: amplify_app_name not in amplify_apps_list.stdout
  register: amplify_app_creation
  # Não é necessário usar `changed_when` aqui também.

- name: Atualizar o app no AWS Amplify caso já exista
  ansible.builtin.command: >
      aws amplify update-app --app-id {{ amplify_app_id }} --region {{ amplify_region }}
  when: amplify_app_name in amplify_apps_list.stdout
  register: amplify_app_update
  # Não é necessário usar `changed_when` aqui também.

- name: Iniciar o deploy no AWS Amplify
  ansible.builtin.command: >
      aws amplify start-job --app-id {{ amplify_app_id }} --branch-name {{ amplify_branch }} --job-type RELEASE --region {{ amplify_region }}
  register: deploy_status

- name: Verificar status do deploy no Amplify
  ansible.builtin.debug:
      msg: "Status do deploy: {{ deploy_status.stdout }}"

- name: Aguardar o deploy ser concluído
  ansible.builtin.pause:
      seconds: 30

- name: Verificar status do job de deploy no Amplify
  ansible.builtin.command: >
      aws amplify get-job
      --app-id {{ amplify_app_id }}
      --branch-name {{ amplify_branch }}
      --job-id {{ deploy_status.stdout }}
      --region {{ amplify_region }}
  register: job_status
  until: job_status.stdout | search("SUCCEEDED")
  retries: 10
  delay: 30
  timeout: 300

- name: Concluir o deploy
  ansible.builtin.debug:
      msg: "Deploy concluído com sucesso!"
  when: job_status.stdout | search("SUCCEEDED")
