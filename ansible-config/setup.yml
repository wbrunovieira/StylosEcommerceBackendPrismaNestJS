- name: Initial server setup
  hosts: all
  become: true
  tasks:
    - name: Update and upgrade the system
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install essential packages
      apt:
        name:
          - curl
          - wget
          - unzip
        state: present

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-Linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Ensure Docker CLI plugins directory exists
      file:
        path: /usr/libexec/docker/cli-plugins
        state: directory
        mode: '0755'    

    - name: Verify Docker Compose Installation
      command: /usr/local/bin/docker-compose --version

    - name: Ensure /usr/local/bin is in PATH
      lineinfile:
        path: ~/.bashrc
        line: 'export PATH=$PATH:/usr/local/bin'
        state: present

    - name: Ensure Docker Compose is available as a Docker subcommand
      file:
        src: /usr/local/bin/docker-compose
        dest: /usr/libexec/docker/cli-plugins/docker-compose
        state: link  

    - name: Check if swap is already configured
      command: swapon --show
      register: swap_status
      changed_when: false

    - name: Create a 1GB swap file if not exists
      command: fallocate -l 1G /swapfile
      args:
        creates: /swapfile
      when: swap_status.stdout == ""

    - name: Secure the swap file
      file:
        path: /swapfile
        mode: '0600'
      when: swap_status.stdout == ""

    - name: Format the swap file
      command: mkswap /swapfile
      when: swap_status.stdout == ""

    - name: Activate the swap file
      command: swapon /swapfile
      when: swap_status.stdout == ""

    - name: Ensure the swap is enabled at boot
      lineinfile:
        path: /etc/fstab
        line: "/swapfile none swap sw 0 0"
        state: present

    - name: Clone or update the project from GitHub
      git:
        repo: "https://github.com/wbrunovieira/StylosEcommerceBackendPrismaNestJS.git"
        dest: /opt/StylosEcommerceBackendPrismaNestJS
        update: yes

    - name: Ensure target directory exists for .env.production
      file:
        path: /opt/StylosEcommerceBackendPrismaNestJS
        state: directory
        mode: '0755'

    - name: Copy .env.production to the server
      copy:
        src: /home/wbruno/projects/StylosEcommerceBackendPrismaNestJS/.env.production
        dest: /opt/StylosEcommerceBackendPrismaNestJS/.env.production
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Start the production Docker Compose services
      shell: |
        cd /opt/StylosEcommerceBackendPrismaNestJS
        docker compose -f docker-compose.prod.yml up -d
      args:
        executable: /bin/bash
